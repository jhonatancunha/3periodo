USE pet_adopt;

# ESTA CONSULTA SELECIONA O NOME DOS VETERINARIOS QUE REALIZARAM MAIS DE UM TRATAMENTO EM UM CACHORRO
# A CONSULTA TAMBÉM SELECIONA O NOME DO RESPECTIVO CACHORRO
SELECT F.nome, C.nome AS nome_cachorro
FROM FUNCIONARIO F, CACHORRO C, ATENDIMENTO A
WHERE C.id = A.id_cachorro
AND F.cpf IN (
	SELECT V.cpf
    FROM VETERINARIO V
)
AND F.cpf = A.cpf_veterinario
GROUP BY F.nome, C.nome
HAVING COUNT(*) > 1; 

# ESTA CONSULTA NOS RETORNA O NOME DE TODOS OS CACHORROS ADOTADOS PELOS CLIENTES QUE 
# FORAM ATENDIMENTOS PELA RECEPCIONISTA 'Amanda Tereza Aparício'
SELECT C.nome AS nome_cachorro
FROM CACHORRO C, FUNCIONARIO F, CLIENTE CL, RECEP_ATEND_CLIENTE RAC
WHERE CL.cpf = C.cpf_cliente
AND F.nome = 'Amanda Tereza Aparício'
AND F.cpf IN (
	SELECT R.cpf
    FROM RECEPCIONISTA R
)
AND F.cpf = RAC.cpf_recep
AND CL.cpf = RAC.cpf_cliente;

# ESTA CONSULTA RETORNA A QUANTIDADE DE ATENDIMENTO QUE
# CADA RAÇA DE CACHORRO CADASTRADA NO SISTEMA REALIZOU
SELECT COUNT(R2.nome) AS qtd_atendimento, R2.nome
FROM RACA R2, CACHORRO C2, ATENDIMENTO A2
WHERE R2.nome = C2.nome_raca
AND A2.id_cachorro = C2.id
GROUP BY R2.nome
ORDER BY qtd_atendimento DESC;


# ESTA CONSULTA RETORNA O NOME DE TODOS OS CACHORROS CADASTRADOS NO SISTEMA QUE
# NÃO REALIZARAM NENHUM TRATAMENTO ATÉ O MOMENTO
SELECT C.nome
FROM CACHORRO C
WHERE C.id NOT IN (
	SELECT C2.id
    FROM CACHORRO C2, ATENDIMENTO A2
    WHERE C2.id = A2.id_cachorro
);

# ESTA CONSULTA SELECIONA O NOME E ENDEREÇO DOS CLIENTES QUE
# ADOTARAM CACHORROS DO PORTE 'G'
SELECT C.nome, E.tipo_logradouro, E.rua, E.numero, E.complemento
FROM CLIENTE C, ENDERECO E, CACHORRO CA
WHERE CA.cpf_cliente = C.cpf
AND CA.nome_raca IN (
	SELECT CA2.nome_raca
    FROM CACHORRO CA2, RACA R
    WHERE CA2.nome_raca = R.nome
    AND R.porte = 'G'
)
AND C.end_numero = E.numero
AND C.end_rua = E.rua;


# ESTA CONSULTA RETORNA O NOME DO ESTAGIARIO QUE
# REALIZOU A MAIOR QUANTIDADE DE COMPRAS DE RAÇÃO

#MODO 1
SELECT F.nome
FROM FUNCIONARIO F, ESTAGIARIO E
WHERE F.cpf = E.cpf 
AND F.cpf = (
	SELECT E2.cpf
    FROM ESTAGIARIO E2, ESTAG_COMPRA_RACAO COMPRA_RACAO
    WHERE E2.cpf = COMPRA_RACAO.cpf_estag
    GROUP BY COMPRA_RACAO.cpf_estag
    ORDER BY SUM(COMPRA_RACAO.cpf_estag) DESC
    LIMIT 1
);

#MODO 2
SELECT F.nome
FROM ESTAGIARIO E, ESTAG_COMPRA_RACAO COMPRA_RACAO, FUNCIONARIO F
WHERE E.cpf = F.cpf 
AND E.cpf = COMPRA_RACAO.cpf_estag
GROUP BY COMPRA_RACAO.cpf_estag
ORDER BY SUM(COMPRA_RACAO.cpf_estag) DESC
LIMIT 1;


# ESTA CONSULTA RETORNA O NOME DO CACHORRO QUE
# MAIS PASSARAM POR ATENDIMENTOS ATÉ O MOMENTO
SELECT C.nome, COUNT(A.id_cachorro) as qtd_atendimento
FROM CACHORRO C, ATENDIMENTO A
WHERE C.id = A.id_cachorro
GROUP BY A.id_cachorro
ORDER BY SUM(A.id_cachorro) DESC
LIMIT 1;

# ESTA CONSULTA SELECIONA O NOME DOS CLIENTES CADASTRADOS NO SISTEMA QUE
# NÃO EFETUARAM NENHUM PROCESSO DE ADOÇÃO ATÉ O MOMENTO
SELECT C.nome
FROM CLIENTE C
WHERE C.cpf NOT IN (
	SELECT CA.cpf_cliente
    FROM CACHORRO CA
);

# ESTA CONSULTA RETORNA O NOME DOS VETERINARIOS QUE
# NÃO REALIZARAM NENHUM PROCESSO DE ATENDIMENTO ATÉ O MOMENTO
SELECT F.nome
FROM VETERINARIO V, FUNCIONARIO F
WHERE V.cpf = F.cpf 
AND V.cpf NOT IN (
	SELECT A.cpf_veterinario
    FROM ATENDIMENTO A
);

# ESTA CONSULTA RETORNA OS RECEPCIONISTA QUE
# ATÉ O MOMENTO NÃO ATENDEU NENHUM CLIENTE
SELECT F.nome
FROM RECEPCIONISTA R, FUNCIONARIO F
WHERE R.cpf = F.cpf
AND R.cpf NOT IN (
	SELECT RAC.cpf_recep
    FROM RECEP_ATEND_CLIENTE RAC
);

# ESTA CONSULTA RETORNA AS RAÇÕES CADASTRADAS NO SISTEMA QUE
# NÃO POSSUEM REGISTROS DE COMPRAS ATÉ O MOMENTO
SELECT DISTINCT R.marca
FROM RACAO R
WHERE NOT EXISTS (
	SELECT CR.marca_racao
    FROM ESTAG_COMPRA_RACAO CR
    WHERE R.marca = CR.marca_racao
);

# ESTA CONSULTA RETORNA AS MARCAS DE RAÇÕES QUE POSSUEM REGISTRO DE COMPRAS
SELECT DISTINCT CR.marca_racao
FROM ESTAG_COMPRA_RACAO CR
LEFT OUTER JOIN RACAO R2
ON NOT EXISTS (
	SELECT CR.marca_racao
    FROM ESTAG_COMPRA_RACAO CR
    WHERE R2.marca = CR.marca_racao
);



